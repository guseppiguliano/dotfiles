# https://wiki.mozilla.org/Security/Server_Side_TLS#Recommended_configurations
# Modern compatibility

server {
  server_name stefansundin.com;

  # Logs
  access_log /home/ubuntu/nginx/log/nginx-access.log;
  error_log /home/ubuntu/nginx/log/nginx-error.log;

  # SSL
  listen 443 ssl http2;
  ssl_certificate /home/ubuntu/nginx/cert.crt;
  ssl_certificate_key /home/ubuntu/nginx/cert.key;
  ssl_dhparam /home/ubuntu/nginx/dhparams.pem;
  ssl_session_timeout 5m;
  ssl_session_cache shared:SSL:10m;
  ssl_protocols TLSv1.2;
  ssl_ciphers "ECDHE-ECDSA-AES256-GCM-SHA384:ECDHE-RSA-AES256-GCM-SHA384:ECDHE-ECDSA-CHACHA20-POLY1305:ECDHE-RSA-CHACHA20-POLY1305:ECDHE-ECDSA-AES128-GCM-SHA256:ECDHE-RSA-AES128-GCM-SHA256:ECDHE-ECDSA-AES256-SHA384:ECDHE-RSA-AES256-SHA384:ECDHE-ECDSA-AES128-SHA256:ECDHE-RSA-AES128-SHA256";
  ssl_prefer_server_ciphers on;
  ssl_stapling on;
  resolver 8.8.8.8 8.8.4.4;
  add_header Strict-Transport-Security "max-age=15724800; preload";

  charset_types utf-8;
  charset utf-8;

  root /home/ubuntu/nginx/public;
  try_files $uri;
  error_page 500 502 503 504 /500.html;

  # redirect trailing dot
  if ($http_host ~ \.$) {
    rewrite ^(.*) $scheme://$host$1 permanent;
  }

  # deny access to files starting with dot
  location ~ /\. {
    deny all;
  }
}

# redirect http to https, except for Let's Encrypt
server {
  server_name stefansundin.com;
  listen 80;
  location / {
    return 301 https://stefansundin.com$request_uri;
  }
  location /.well-known/acme-challenge/ {
    # sudo certbot certonly --manual
    alias /home/ubuntu/nginx/acme-challenges/;
  }
}
